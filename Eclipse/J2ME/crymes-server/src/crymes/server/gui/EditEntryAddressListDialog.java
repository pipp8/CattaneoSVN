/* ** *** ***** ******* *********** *************
 * DIA - Dipartimento di Informatica ed Applicazioni "Renato M. Capocelli" 				
 * http://www.dia.unisa.it			
 * 
 ************* *********** ******* ***** *** ** */

package crymes.server.gui;

import javax.swing.JOptionPane;

/**
 *
 * @author  maucem
 */
@SuppressWarnings("serial")
public class EditEntryAddressListDialog extends javax.swing.JDialog implements java.awt.event.ActionListener {
 
	private String _name;
	private String _address;
	private int _row;
	private AddressListPanel _parent;
	
    /** Creates new form passphraseDialog */
    public EditEntryAddressListDialog(AddressListPanel parent, String name, String address, int row) {
        //super(null, true);
    	setModal(true);
    	_parent = parent;
        _name = name;
        _address = address;
        _row = row;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jButton1 = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Passphrase");
        setModal(true);
        

        jButton1.setText("OK");
        jButton1.addActionListener(this);

        
        nameField.setText(_name);
        nameField.addActionListener(this);
        
        addressField.setText(_address);
        addressField.setEnabled(false);
        
        jLabel1.setText("Edit the entry:");

        jButton2.setText("Exit");
        jButton2.addActionListener(this);

        jLabel.setText("Name");

        jLabel2.setText("Address");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel2)
                            .add(jLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(addressField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE))
                            .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel))
                .add(16, 16, 16)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addressField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .add(13, 13, 13)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == nameField) {
            EditEntryAddressListDialog.this.doProcess(evt);
        } else if (evt.getSource() == jButton1) {
            EditEntryAddressListDialog.this.doProcess(evt);
        } else if (evt.getSource() == jButton2) {
            EditEntryAddressListDialog.this.exitAction(evt);
        }
    }

  

    private void exitAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitAction
    	this.setVisible(false);
    }//GEN-LAST:event_exitAction


    private void doProcess(java.awt.event.ActionEvent evt) {
    	boolean proceed = true;
    	
    	String str = "";
    	
    	String name;
    	if (nameField.getText().compareTo("") == 0){
    		proceed = false;
    		str = "The name field can't be blank.\n";
    	} else {
    		name = nameField.getText();
    		// Formato internazionale con almeno 7 cifre numeriche
    		if (name.length()<2){
    			proceed = false;
    			str = "Name must be at least 2 characters.\n";
    		}
    	}
    	String number;
    	if ( (addressField.getText()).compareTo("") == 0){
    		proceed = false;
    		if (str.compareTo("")==0){
    			str += "The number field can't be blank.\n";
    		} else {
    			str = "The name and the number fields can't be blank.\n";
    		}
    	} else {
    		number = addressField.getText();
    		// Formato internazionale con almeno 7 cifre numeriche
    		if (!number.matches("\\x2B\\d{7,}")){
    			proceed = false;
    			str += "The phone number must be in the \n international format: +393331234567";
    		}
    	}
    	if (!proceed){
    		JOptionPane.showMessageDialog(this, str, "SMS Server", JOptionPane.INFORMATION_MESSAGE);
    		return;
    	}
    	
    	
    	_parent.callbackEditEntryDialog(nameField.getText(), addressField.getText(), _row);
    	this.setVisible(false);
    }


    private javax.swing.JTextField addressField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nameField;
    
    
}
