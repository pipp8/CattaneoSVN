/* soapServer.cpp
   Generated by gSOAP 2.8.2 from WebApi.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.2 2011-04-26 11:09:48 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getToken"))
		return soap_serve___ns1__getToken(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:login"))
		return soap_serve___ns1__login(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:attivaProcedimento"))
		return soap_serve___ns1__attivaProcedimento(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:attivaProcedimentoWide"))
		return soap_serve___ns1__attivaProcedimentoWide(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:aggiungiDocumentoAlProcedimento"))
		return soap_serve___ns1__aggiungiDocumentoAlProcedimento(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getProcedimento"))
		return soap_serve___ns1__getProcedimento(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:avanzaProcedimento"))
		return soap_serve___ns1__avanzaProcedimento(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getFlussi"))
		return soap_serve___ns1__getFlussi(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getGiustificativi"))
		return soap_serve___ns1__getGiustificativi(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getToken(struct soap *soap)
{	struct __ns1__getToken soap_tmp___ns1__getToken;
	_ns1__getTokenResponse ns1__getTokenResponse;
	ns1__getTokenResponse.soap_default(soap);
	soap_default___ns1__getToken(soap, &soap_tmp___ns1__getToken);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getToken(soap, &soap_tmp___ns1__getToken, "-ns1:getToken", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getToken(soap, soap_tmp___ns1__getToken.ns1__getToken, &ns1__getTokenResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getTokenResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getTokenResponse.soap_put(soap, "ns1:getTokenResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getTokenResponse.soap_put(soap, "ns1:getTokenResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__login(struct soap *soap)
{	struct __ns1__login soap_tmp___ns1__login;
	_ns1__loginResponse ns1__loginResponse;
	ns1__loginResponse.soap_default(soap);
	soap_default___ns1__login(soap, &soap_tmp___ns1__login);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__login(soap, &soap_tmp___ns1__login, "-ns1:login", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__login(soap, soap_tmp___ns1__login.ns1__login, &ns1__loginResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__loginResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__loginResponse.soap_put(soap, "ns1:loginResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__loginResponse.soap_put(soap, "ns1:loginResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__attivaProcedimento(struct soap *soap)
{	struct __ns1__attivaProcedimento soap_tmp___ns1__attivaProcedimento;
	_ns1__attivaProcedimentoResponse ns1__attivaProcedimentoResponse;
	ns1__attivaProcedimentoResponse.soap_default(soap);
	soap_default___ns1__attivaProcedimento(soap, &soap_tmp___ns1__attivaProcedimento);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__attivaProcedimento(soap, &soap_tmp___ns1__attivaProcedimento, "-ns1:attivaProcedimento", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__attivaProcedimento(soap, soap_tmp___ns1__attivaProcedimento.ns1__attivaProcedimento, &ns1__attivaProcedimentoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__attivaProcedimentoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__attivaProcedimentoResponse.soap_put(soap, "ns1:attivaProcedimentoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__attivaProcedimentoResponse.soap_put(soap, "ns1:attivaProcedimentoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__attivaProcedimentoWide(struct soap *soap)
{	struct __ns1__attivaProcedimentoWide soap_tmp___ns1__attivaProcedimentoWide;
	_ns1__attivaProcedimentoWideResponse ns1__attivaProcedimentoWideResponse;
	ns1__attivaProcedimentoWideResponse.soap_default(soap);
	soap_default___ns1__attivaProcedimentoWide(soap, &soap_tmp___ns1__attivaProcedimentoWide);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__attivaProcedimentoWide(soap, &soap_tmp___ns1__attivaProcedimentoWide, "-ns1:attivaProcedimentoWide", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__attivaProcedimentoWide(soap, soap_tmp___ns1__attivaProcedimentoWide.ns1__attivaProcedimentoWide, &ns1__attivaProcedimentoWideResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__attivaProcedimentoWideResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__attivaProcedimentoWideResponse.soap_put(soap, "ns1:attivaProcedimentoWideResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__attivaProcedimentoWideResponse.soap_put(soap, "ns1:attivaProcedimentoWideResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__aggiungiDocumentoAlProcedimento(struct soap *soap)
{	struct __ns1__aggiungiDocumentoAlProcedimento soap_tmp___ns1__aggiungiDocumentoAlProcedimento;
	_ns1__aggiungiDocumentoAlProcedimentoResponse ns1__aggiungiDocumentoAlProcedimentoResponse;
	ns1__aggiungiDocumentoAlProcedimentoResponse.soap_default(soap);
	soap_default___ns1__aggiungiDocumentoAlProcedimento(soap, &soap_tmp___ns1__aggiungiDocumentoAlProcedimento);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__aggiungiDocumentoAlProcedimento(soap, &soap_tmp___ns1__aggiungiDocumentoAlProcedimento, "-ns1:aggiungiDocumentoAlProcedimento", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__aggiungiDocumentoAlProcedimento(soap, soap_tmp___ns1__aggiungiDocumentoAlProcedimento.ns1__aggiungiDocumentoAlProcedimento, &ns1__aggiungiDocumentoAlProcedimentoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__aggiungiDocumentoAlProcedimentoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__aggiungiDocumentoAlProcedimentoResponse.soap_put(soap, "ns1:aggiungiDocumentoAlProcedimentoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__aggiungiDocumentoAlProcedimentoResponse.soap_put(soap, "ns1:aggiungiDocumentoAlProcedimentoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getProcedimento(struct soap *soap)
{	struct __ns1__getProcedimento soap_tmp___ns1__getProcedimento;
	_ns1__getProcedimentoResponse ns1__getProcedimentoResponse;
	ns1__getProcedimentoResponse.soap_default(soap);
	soap_default___ns1__getProcedimento(soap, &soap_tmp___ns1__getProcedimento);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getProcedimento(soap, &soap_tmp___ns1__getProcedimento, "-ns1:getProcedimento", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getProcedimento(soap, soap_tmp___ns1__getProcedimento.ns1__getProcedimento, &ns1__getProcedimentoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getProcedimentoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getProcedimentoResponse.soap_put(soap, "ns1:getProcedimentoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getProcedimentoResponse.soap_put(soap, "ns1:getProcedimentoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__avanzaProcedimento(struct soap *soap)
{	struct __ns1__avanzaProcedimento soap_tmp___ns1__avanzaProcedimento;
	_ns1__avanzaProcedimentoResponse ns1__avanzaProcedimentoResponse;
	ns1__avanzaProcedimentoResponse.soap_default(soap);
	soap_default___ns1__avanzaProcedimento(soap, &soap_tmp___ns1__avanzaProcedimento);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__avanzaProcedimento(soap, &soap_tmp___ns1__avanzaProcedimento, "-ns1:avanzaProcedimento", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__avanzaProcedimento(soap, soap_tmp___ns1__avanzaProcedimento.ns1__avanzaProcedimento, &ns1__avanzaProcedimentoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__avanzaProcedimentoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__avanzaProcedimentoResponse.soap_put(soap, "ns1:avanzaProcedimentoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__avanzaProcedimentoResponse.soap_put(soap, "ns1:avanzaProcedimentoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getFlussi(struct soap *soap)
{	struct __ns1__getFlussi soap_tmp___ns1__getFlussi;
	_ns1__getFlussiResponse ns1__getFlussiResponse;
	ns1__getFlussiResponse.soap_default(soap);
	soap_default___ns1__getFlussi(soap, &soap_tmp___ns1__getFlussi);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getFlussi(soap, &soap_tmp___ns1__getFlussi, "-ns1:getFlussi", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getFlussi(soap, soap_tmp___ns1__getFlussi.ns1__getFlussi, &ns1__getFlussiResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getFlussiResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getFlussiResponse.soap_put(soap, "ns1:getFlussiResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getFlussiResponse.soap_put(soap, "ns1:getFlussiResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getGiustificativi(struct soap *soap)
{	struct __ns1__getGiustificativi soap_tmp___ns1__getGiustificativi;
	_ns1__getGiustificativiResponse ns1__getGiustificativiResponse;
	ns1__getGiustificativiResponse.soap_default(soap);
	soap_default___ns1__getGiustificativi(soap, &soap_tmp___ns1__getGiustificativi);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getGiustificativi(soap, &soap_tmp___ns1__getGiustificativi, "-ns1:getGiustificativi", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__getGiustificativi(soap, soap_tmp___ns1__getGiustificativi.ns1__getGiustificativi, &ns1__getGiustificativiResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getGiustificativiResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getGiustificativiResponse.soap_put(soap, "ns1:getGiustificativiResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getGiustificativiResponse.soap_put(soap, "ns1:getGiustificativiResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
