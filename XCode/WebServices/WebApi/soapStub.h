/*
 $Author: cattaneo $
 $Date: 2011-05-14 18:37:51 +0200(Sab, 14 Mag 2011) $
 $Revision: 11 $
 */

/* soapStub.h
   Generated by gSOAP 2.8.2 from WebApi.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://webapi.wfca.infocert.it"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__EccezioneAutenticazione
#define SOAP_TYPE_ns1__EccezioneAutenticazione (7)
/* ns1:EccezioneAutenticazione */
class SOAP_CMAC ns1__EccezioneAutenticazione
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_ns1__EccezioneAutenticazione */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EccezioneAutenticazione() { ns1__EccezioneAutenticazione::soap_default(NULL); }
	virtual ~ns1__EccezioneAutenticazione() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EccezioneSistema
#define SOAP_TYPE_ns1__EccezioneSistema (8)
/* ns1:EccezioneSistema */
class SOAP_CMAC ns1__EccezioneSistema
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_ns1__EccezioneSistema */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EccezioneSistema() { ns1__EccezioneSistema::soap_default(NULL); }
	virtual ~ns1__EccezioneSistema() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MetaDato
#define SOAP_TYPE_ns1__MetaDato (9)
/* ns1:MetaDato */
class SOAP_CMAC ns1__MetaDato
{
public:
	char *nome;	/* optional element of type xsd:string */
	int tipo;	/* required element of type xsd:int */
	char *valore;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns1__MetaDato */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MetaDato() { ns1__MetaDato::soap_default(NULL); }
	virtual ~ns1__MetaDato() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Nota
#define SOAP_TYPE_ns1__Nota (10)
/* ns1:Nota */
class SOAP_CMAC ns1__Nota
{
public:
	char *attivita;	/* optional element of type xsd:string */
	time_t *dataOra;	/* optional element of type xsd:dateTime */
	char *descrizioneUtente;	/* optional element of type xsd:string */
	char *testo;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns1__Nota */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Nota() { ns1__Nota::soap_default(NULL); }
	virtual ~ns1__Nota() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfNota
#define SOAP_TYPE_ns1__ArrayOfNota (11)
/* ns1:ArrayOfNota */
class SOAP_CMAC ns1__ArrayOfNota
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	ns1__Nota **item;	/* optional element of type ns1:Nota */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns1__ArrayOfNota */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfNota() { ns1__ArrayOfNota::soap_default(NULL); }
	virtual ~ns1__ArrayOfNota() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Stato
#define SOAP_TYPE_ns1__Stato (12)
/* ns1:Stato */
class SOAP_CMAC ns1__Stato
{
public:
	char *note;	/* optional element of type xsd:string */
	int tipo;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__Stato */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Stato() { ns1__Stato::soap_default(NULL); }
	virtual ~ns1__Stato() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Step
#define SOAP_TYPE_ns1__Step (13)
/* ns1:Step */
class SOAP_CMAC ns1__Step
{
public:
	time_t *dataOraFine;	/* optional element of type xsd:dateTime */
	time_t *dataOraInizio;	/* optional element of type xsd:dateTime */
	char *descrizione;	/* optional element of type xsd:string */
	char *esecutore;	/* optional element of type xsd:string */
	char *id;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns1__Step */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Step() { ns1__Step::soap_default(NULL); }
	virtual ~ns1__Step() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStep
#define SOAP_TYPE_ns1__ArrayOfStep (14)
/* ns1:ArrayOfStep */
class SOAP_CMAC ns1__ArrayOfStep
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	ns1__Step **item;	/* optional element of type ns1:Step */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__ArrayOfStep */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStep() { ns1__ArrayOfStep::soap_default(NULL); }
	virtual ~ns1__ArrayOfStep() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOf_USCORExsd_USCOREstring
#define SOAP_TYPE_ns1__ArrayOf_USCORExsd_USCOREstring (15)
/* ns1:ArrayOf_xsd_string */
class SOAP_CMAC ns1__ArrayOf_USCORExsd_USCOREstring
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	char **item;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__ArrayOf_USCORExsd_USCOREstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOf_USCORExsd_USCOREstring() { ns1__ArrayOf_USCORExsd_USCOREstring::soap_default(NULL); }
	virtual ~ns1__ArrayOf_USCORExsd_USCOREstring() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Esito
#define SOAP_TYPE_ns1__Esito (16)
/* ns1:Esito */
class SOAP_CMAC ns1__Esito
{
public:
	char *descrizione;	/* optional element of type xsd:string */
	ns1__ArrayOf_USCORExsd_USCOREstring *valori;	/* optional element of type ns1:ArrayOf_xsd_string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns1__Esito */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Esito() { ns1__Esito::soap_default(NULL); }
	virtual ~ns1__Esito() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Attributo
#define SOAP_TYPE_ns1__Attributo (17)
/* ns1:Attributo */
class SOAP_CMAC ns1__Attributo
{
public:
	char *nome;	/* optional element of type xsd:string */
	char *valore;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns1__Attributo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Attributo() { ns1__Attributo::soap_default(NULL); }
	virtual ~ns1__Attributo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAttributo
#define SOAP_TYPE_ns1__ArrayOfAttributo (18)
/* ns1:ArrayOfAttributo */
class SOAP_CMAC ns1__ArrayOfAttributo
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	ns1__Attributo **item;	/* optional element of type ns1:Attributo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__ArrayOfAttributo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAttributo() { ns1__ArrayOfAttributo::soap_default(NULL); }
	virtual ~ns1__ArrayOfAttributo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Funzione
#define SOAP_TYPE_ns1__Funzione (19)
/* ns1:Funzione */
class SOAP_CMAC ns1__Funzione
{
public:
	ns1__ArrayOfAttributo *attributi;	/* optional element of type ns1:ArrayOfAttributo */
	char *codice;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns1__Funzione */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Funzione() { ns1__Funzione::soap_default(NULL); }
	virtual ~ns1__Funzione() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFunzione
#define SOAP_TYPE_ns1__ArrayOfFunzione (20)
/* ns1:ArrayOfFunzione */
class SOAP_CMAC ns1__ArrayOfFunzione
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	ns1__Funzione **item;	/* optional element of type ns1:Funzione */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns1__ArrayOfFunzione */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFunzione() { ns1__ArrayOfFunzione::soap_default(NULL); }
	virtual ~ns1__ArrayOfFunzione() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStepCompetenza
#define SOAP_TYPE_ns1__ArrayOfStepCompetenza (22)
/* ns1:ArrayOfStepCompetenza */
class SOAP_CMAC ns1__ArrayOfStepCompetenza
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	class ns1__StepCompetenza **item;	/* optional element of type ns1:StepCompetenza */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns1__ArrayOfStepCompetenza */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStepCompetenza() { ns1__ArrayOfStepCompetenza::soap_default(NULL); }
	virtual ~ns1__ArrayOfStepCompetenza() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Procedimento
#define SOAP_TYPE_ns1__Procedimento (23)
/* ns1:Procedimento */
class SOAP_CMAC ns1__Procedimento
{
public:
	time_t *dataOraFine;	/* optional element of type xsd:dateTime */
	time_t *dataOraInizio;	/* optional element of type xsd:dateTime */
	char *descrizione;	/* optional element of type xsd:string */
	char *descrizioneOwner;	/* optional element of type xsd:string */
	char *id;	/* optional element of type xsd:string */
	ns1__ArrayOfNota *note;	/* optional element of type ns1:ArrayOfNota */
	char *numeroRepertorio;	/* optional element of type xsd:string */
	char *richiedente;	/* optional element of type xsd:string */
	ns1__Stato *stato;	/* optional element of type ns1:Stato */
	ns1__ArrayOfStep *step;	/* optional element of type ns1:ArrayOfStep */
	ns1__ArrayOfStepCompetenza *stepCompetenza;	/* optional element of type ns1:ArrayOfStepCompetenza */
	char *usernameOwner;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_ns1__Procedimento */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Procedimento() { ns1__Procedimento::soap_default(NULL); }
	virtual ~ns1__Procedimento() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Flusso
#define SOAP_TYPE_ns1__Flusso (24)
/* ns1:Flusso */
class SOAP_CMAC ns1__Flusso
{
public:
	char *codFlusso;	/* optional element of type xsd:string */
	char *descrizione;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_ns1__Flusso */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Flusso() { ns1__Flusso::soap_default(NULL); }
	virtual ~ns1__Flusso() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Giustificativo
#define SOAP_TYPE_ns1__Giustificativo (25)
/* ns1:Giustificativo */
class SOAP_CMAC ns1__Giustificativo
{
public:
	char *anno;	/* optional element of type xsd:string */
	char *codiceFlusso;	/* optional element of type xsd:string */
	time_t *dataOraFine;	/* optional element of type xsd:dateTime */
	time_t *dataOraInizio;	/* optional element of type xsd:dateTime */
	char *esito;	/* optional element of type xsd:string */
	LONG64 idDocumento;	/* required element of type xsd:long */
	LONG64 idFascicolo;	/* required element of type xsd:long */
	char *mese;	/* optional element of type xsd:string */
	char *nominativo;	/* optional element of type xsd:string */
	char *username;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_ns1__Giustificativo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Giustificativo() { ns1__Giustificativo::soap_default(NULL); }
	virtual ~ns1__Giustificativo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getToken
#define SOAP_TYPE__ns1__getToken (26)
/* ns1:getToken */
class SOAP_CMAC _ns1__getToken
{
public:
	char *token;	/* required element of type xsd:string */
	char *connectionIdMac;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE__ns1__getToken */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getToken() { _ns1__getToken::soap_default(NULL); }
	virtual ~_ns1__getToken() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getTokenResponse
#define SOAP_TYPE__ns1__getTokenResponse (27)
/* ns1:getTokenResponse */
class SOAP_CMAC _ns1__getTokenResponse
{
public:
	char *getTokenReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE__ns1__getTokenResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getTokenResponse() { _ns1__getTokenResponse::soap_default(NULL); }
	virtual ~_ns1__getTokenResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__login
#define SOAP_TYPE__ns1__login (28)
/* ns1:login */
class SOAP_CMAC _ns1__login
{
public:
	char *usrApp;	/* required element of type xsd:string */
	char *pwdApp;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE__ns1__login */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__login() { _ns1__login::soap_default(NULL); }
	virtual ~_ns1__login() { }
};
#endif

#ifndef SOAP_TYPE__ns1__loginResponse
#define SOAP_TYPE__ns1__loginResponse (29)
/* ns1:loginResponse */
class SOAP_CMAC _ns1__loginResponse
{
public:
	char *loginReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE__ns1__loginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__loginResponse() { _ns1__loginResponse::soap_default(NULL); }
	virtual ~_ns1__loginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__attivaProcedimento
#define SOAP_TYPE__ns1__attivaProcedimento (30)
/* ns1:attivaProcedimento */
class SOAP_CMAC _ns1__attivaProcedimento
{
public:
	char *token;	/* required element of type xsd:string */
	char *username;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	char *codFlusso;	/* required element of type xsd:string */
	char *nomeDocumento;	/* required element of type xsd:string */
	char *nomeFile;	/* required element of type xsd:string */
	int __sizemetaDatiDocumento;	/* sequence of elements <metaDatiDocumento> */
	ns1__MetaDato **metaDatiDocumento;	/* required element of type ns1:MetaDato */
	int __sizemetaDatiProcedimento;	/* sequence of elements <metaDatiProcedimento> */
	ns1__MetaDato **metaDatiProcedimento;	/* required element of type ns1:MetaDato */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE__ns1__attivaProcedimento */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__attivaProcedimento() { _ns1__attivaProcedimento::soap_default(NULL); }
	virtual ~_ns1__attivaProcedimento() { }
};
#endif

#ifndef SOAP_TYPE__ns1__attivaProcedimentoResponse
#define SOAP_TYPE__ns1__attivaProcedimentoResponse (31)
/* ns1:attivaProcedimentoResponse */
class SOAP_CMAC _ns1__attivaProcedimentoResponse
{
public:
	ns1__Procedimento *attivaProcedimentoReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:Procedimento */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE__ns1__attivaProcedimentoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__attivaProcedimentoResponse() { _ns1__attivaProcedimentoResponse::soap_default(NULL); }
	virtual ~_ns1__attivaProcedimentoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__attivaProcedimentoWide
#define SOAP_TYPE__ns1__attivaProcedimentoWide (32)
/* ns1:attivaProcedimentoWide */
class SOAP_CMAC _ns1__attivaProcedimentoWide
{
public:
	char *token;	/* required element of type xsd:string */
	char *username;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	char *codFlusso;	/* required element of type xsd:string */
	LONG64 idFascicoloWide;	/* required element of type xsd:long */
	LONG64 idDocumentoWide;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE__ns1__attivaProcedimentoWide */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__attivaProcedimentoWide() { _ns1__attivaProcedimentoWide::soap_default(NULL); }
	virtual ~_ns1__attivaProcedimentoWide() { }
};
#endif

#ifndef SOAP_TYPE__ns1__attivaProcedimentoWideResponse
#define SOAP_TYPE__ns1__attivaProcedimentoWideResponse (33)
/* ns1:attivaProcedimentoWideResponse */
class SOAP_CMAC _ns1__attivaProcedimentoWideResponse
{
public:
	ns1__Procedimento *attivaProcedimentoWideReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:Procedimento */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE__ns1__attivaProcedimentoWideResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__attivaProcedimentoWideResponse() { _ns1__attivaProcedimentoWideResponse::soap_default(NULL); }
	virtual ~_ns1__attivaProcedimentoWideResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__aggiungiDocumentoAlProcedimento
#define SOAP_TYPE__ns1__aggiungiDocumentoAlProcedimento (34)
/* ns1:aggiungiDocumentoAlProcedimento */
class SOAP_CMAC _ns1__aggiungiDocumentoAlProcedimento
{
public:
	char *token;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	char *idProcedimento;	/* required element of type xsd:string */
	char *nomeDocumento;	/* required element of type xsd:string */
	char *nomeFile;	/* required element of type xsd:string */
	int __sizemetaDatiDocumento;	/* sequence of elements <metaDatiDocumento> */
	ns1__MetaDato **metaDatiDocumento;	/* required element of type ns1:MetaDato */
	bool inAllegato;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE__ns1__aggiungiDocumentoAlProcedimento */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__aggiungiDocumentoAlProcedimento() { _ns1__aggiungiDocumentoAlProcedimento::soap_default(NULL); }
	virtual ~_ns1__aggiungiDocumentoAlProcedimento() { }
};
#endif

#ifndef SOAP_TYPE__ns1__aggiungiDocumentoAlProcedimentoResponse
#define SOAP_TYPE__ns1__aggiungiDocumentoAlProcedimentoResponse (35)
/* ns1:aggiungiDocumentoAlProcedimentoResponse */
class SOAP_CMAC _ns1__aggiungiDocumentoAlProcedimentoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE__ns1__aggiungiDocumentoAlProcedimentoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__aggiungiDocumentoAlProcedimentoResponse() { _ns1__aggiungiDocumentoAlProcedimentoResponse::soap_default(NULL); }
	virtual ~_ns1__aggiungiDocumentoAlProcedimentoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getProcedimento
#define SOAP_TYPE__ns1__getProcedimento (36)
/* ns1:getProcedimento */
class SOAP_CMAC _ns1__getProcedimento
{
public:
	char *token;	/* required element of type xsd:string */
	char *username;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	char *idProcedimento;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE__ns1__getProcedimento */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getProcedimento() { _ns1__getProcedimento::soap_default(NULL); }
	virtual ~_ns1__getProcedimento() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getProcedimentoResponse
#define SOAP_TYPE__ns1__getProcedimentoResponse (37)
/* ns1:getProcedimentoResponse */
class SOAP_CMAC _ns1__getProcedimentoResponse
{
public:
	ns1__Procedimento *getProcedimentoReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:Procedimento */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE__ns1__getProcedimentoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getProcedimentoResponse() { _ns1__getProcedimentoResponse::soap_default(NULL); }
	virtual ~_ns1__getProcedimentoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__avanzaProcedimento
#define SOAP_TYPE__ns1__avanzaProcedimento (38)
/* ns1:avanzaProcedimento */
class SOAP_CMAC _ns1__avanzaProcedimento
{
public:
	char *token;	/* required element of type xsd:string */
	char *username;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	char *idProcedimento;	/* required element of type xsd:string */
	char *idStep;	/* required element of type xsd:string */
	char *valoreEsito;	/* required element of type xsd:string */
	char *note;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE__ns1__avanzaProcedimento */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__avanzaProcedimento() { _ns1__avanzaProcedimento::soap_default(NULL); }
	virtual ~_ns1__avanzaProcedimento() { }
};
#endif

#ifndef SOAP_TYPE__ns1__avanzaProcedimentoResponse
#define SOAP_TYPE__ns1__avanzaProcedimentoResponse (39)
/* ns1:avanzaProcedimentoResponse */
class SOAP_CMAC _ns1__avanzaProcedimentoResponse
{
public:
	ns1__Procedimento *avanzaProcedimentoReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:Procedimento */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE__ns1__avanzaProcedimentoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__avanzaProcedimentoResponse() { _ns1__avanzaProcedimentoResponse::soap_default(NULL); }
	virtual ~_ns1__avanzaProcedimentoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getFlussi
#define SOAP_TYPE__ns1__getFlussi (40)
/* ns1:getFlussi */
class SOAP_CMAC _ns1__getFlussi
{
public:
	char *token;	/* required element of type xsd:string */
	char *username;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE__ns1__getFlussi */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getFlussi() { _ns1__getFlussi::soap_default(NULL); }
	virtual ~_ns1__getFlussi() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getFlussiResponse
#define SOAP_TYPE__ns1__getFlussiResponse (41)
/* ns1:getFlussiResponse */
class SOAP_CMAC _ns1__getFlussiResponse
{
public:
	int __sizegetFlussiReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <getFlussiReturn> */
	ns1__Flusso **getFlussiReturn;	/* required element of type ns1:Flusso */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE__ns1__getFlussiResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getFlussiResponse() { _ns1__getFlussiResponse::soap_default(NULL); }
	virtual ~_ns1__getFlussiResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getGiustificativi
#define SOAP_TYPE__ns1__getGiustificativi (42)
/* ns1:getGiustificativi */
class SOAP_CMAC _ns1__getGiustificativi
{
public:
	char *token;	/* required element of type xsd:string */
	char *anno;	/* required element of type xsd:string */
	char *mese;	/* required element of type xsd:string */
	char *esito;	/* required element of type xsd:string */
	char *codiceFlusso;	/* required element of type xsd:string */
	LONG64 idAmministrazione;	/* required element of type xsd:long */
	LONG64 idAoo;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE__ns1__getGiustificativi */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getGiustificativi() { _ns1__getGiustificativi::soap_default(NULL); }
	virtual ~_ns1__getGiustificativi() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getGiustificativiResponse
#define SOAP_TYPE__ns1__getGiustificativiResponse (43)
/* ns1:getGiustificativiResponse */
class SOAP_CMAC _ns1__getGiustificativiResponse
{
public:
	int __sizegetGiustificativiReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <getGiustificativiReturn> */
	ns1__Giustificativo **getGiustificativiReturn;	/* required element of type ns1:Giustificativo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE__ns1__getGiustificativiResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getGiustificativiResponse() { _ns1__getGiustificativiResponse::soap_default(NULL); }
	virtual ~_ns1__getGiustificativiResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns1__StepCompetenza
#define SOAP_TYPE_ns1__StepCompetenza (21)
/* ns1:StepCompetenza */
class SOAP_CMAC ns1__StepCompetenza : public ns1__Step
{
public:
	ns1__ArrayOf_USCORExsd_USCOREstring *codiciFunzione;	/* optional element of type ns1:ArrayOf_xsd_string */
	ns1__Esito *esito;	/* optional element of type ns1:Esito */
	ns1__ArrayOfFunzione *funzioni;	/* optional element of type ns1:ArrayOfFunzione */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ns1__StepCompetenza */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__StepCompetenza() { ns1__StepCompetenza::soap_default(NULL); }
	virtual ~ns1__StepCompetenza() { }
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (75)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	ns1__EccezioneAutenticazione *ns1__fault;	/* optional element of type ns1:EccezioneAutenticazione */
	ns1__EccezioneSistema *ns1__fault1;	/* optional element of type ns1:EccezioneSistema */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef SOAP_TYPE___ns1__getToken
#define SOAP_TYPE___ns1__getToken (83)
/* Operation wrapper: */
struct __ns1__getToken
{
public:
	_ns1__getToken *ns1__getToken;	/* optional element of type ns1:getToken */
};
#endif

#ifndef SOAP_TYPE___ns1__login
#define SOAP_TYPE___ns1__login (87)
/* Operation wrapper: */
struct __ns1__login
{
public:
	_ns1__login *ns1__login;	/* optional element of type ns1:login */
};
#endif

#ifndef SOAP_TYPE___ns1__attivaProcedimento
#define SOAP_TYPE___ns1__attivaProcedimento (91)
/* Operation wrapper: */
struct __ns1__attivaProcedimento
{
public:
	_ns1__attivaProcedimento *ns1__attivaProcedimento;	/* optional element of type ns1:attivaProcedimento */
};
#endif

#ifndef SOAP_TYPE___ns1__attivaProcedimentoWide
#define SOAP_TYPE___ns1__attivaProcedimentoWide (95)
/* Operation wrapper: */
struct __ns1__attivaProcedimentoWide
{
public:
	_ns1__attivaProcedimentoWide *ns1__attivaProcedimentoWide;	/* optional element of type ns1:attivaProcedimentoWide */
};
#endif

#ifndef SOAP_TYPE___ns1__aggiungiDocumentoAlProcedimento
#define SOAP_TYPE___ns1__aggiungiDocumentoAlProcedimento (99)
/* Operation wrapper: */
struct __ns1__aggiungiDocumentoAlProcedimento
{
public:
	_ns1__aggiungiDocumentoAlProcedimento *ns1__aggiungiDocumentoAlProcedimento;	/* optional element of type ns1:aggiungiDocumentoAlProcedimento */
};
#endif

#ifndef SOAP_TYPE___ns1__getProcedimento
#define SOAP_TYPE___ns1__getProcedimento (103)
/* Operation wrapper: */
struct __ns1__getProcedimento
{
public:
	_ns1__getProcedimento *ns1__getProcedimento;	/* optional element of type ns1:getProcedimento */
};
#endif

#ifndef SOAP_TYPE___ns1__avanzaProcedimento
#define SOAP_TYPE___ns1__avanzaProcedimento (107)
/* Operation wrapper: */
struct __ns1__avanzaProcedimento
{
public:
	_ns1__avanzaProcedimento *ns1__avanzaProcedimento;	/* optional element of type ns1:avanzaProcedimento */
};
#endif

#ifndef SOAP_TYPE___ns1__getFlussi
#define SOAP_TYPE___ns1__getFlussi (111)
/* Operation wrapper: */
struct __ns1__getFlussi
{
public:
	_ns1__getFlussi *ns1__getFlussi;	/* optional element of type ns1:getFlussi */
};
#endif

#ifndef SOAP_TYPE___ns1__getGiustificativi
#define SOAP_TYPE___ns1__getGiustificativi (115)
/* Operation wrapper: */
struct __ns1__getGiustificativi
{
public:
	_ns1__getGiustificativi *ns1__getGiustificativi;	/* optional element of type ns1:getGiustificativi */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (116)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (117)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (119)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (120)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__getToken(struct soap*, _ns1__getToken *ns1__getToken, _ns1__getTokenResponse *ns1__getTokenResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__login(struct soap*, _ns1__login *ns1__login, _ns1__loginResponse *ns1__loginResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__attivaProcedimento(struct soap*, _ns1__attivaProcedimento *ns1__attivaProcedimento, _ns1__attivaProcedimentoResponse *ns1__attivaProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__attivaProcedimentoWide(struct soap*, _ns1__attivaProcedimentoWide *ns1__attivaProcedimentoWide, _ns1__attivaProcedimentoWideResponse *ns1__attivaProcedimentoWideResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__aggiungiDocumentoAlProcedimento(struct soap*, _ns1__aggiungiDocumentoAlProcedimento *ns1__aggiungiDocumentoAlProcedimento, _ns1__aggiungiDocumentoAlProcedimentoResponse *ns1__aggiungiDocumentoAlProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__getProcedimento(struct soap*, _ns1__getProcedimento *ns1__getProcedimento, _ns1__getProcedimentoResponse *ns1__getProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__avanzaProcedimento(struct soap*, _ns1__avanzaProcedimento *ns1__avanzaProcedimento, _ns1__avanzaProcedimentoResponse *ns1__avanzaProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__getFlussi(struct soap*, _ns1__getFlussi *ns1__getFlussi, _ns1__getFlussiResponse *ns1__getFlussiResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__getGiustificativi(struct soap*, _ns1__getGiustificativi *ns1__getGiustificativi, _ns1__getGiustificativiResponse *ns1__getGiustificativiResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getToken(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__login(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__attivaProcedimento(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__attivaProcedimentoWide(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__aggiungiDocumentoAlProcedimento(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getProcedimento(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__avanzaProcedimento(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getFlussi(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getGiustificativi(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getToken(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getToken *ns1__getToken, _ns1__getTokenResponse *ns1__getTokenResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__login(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__login *ns1__login, _ns1__loginResponse *ns1__loginResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__attivaProcedimento(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__attivaProcedimento *ns1__attivaProcedimento, _ns1__attivaProcedimentoResponse *ns1__attivaProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__attivaProcedimentoWide(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__attivaProcedimentoWide *ns1__attivaProcedimentoWide, _ns1__attivaProcedimentoWideResponse *ns1__attivaProcedimentoWideResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__aggiungiDocumentoAlProcedimento(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__aggiungiDocumentoAlProcedimento *ns1__aggiungiDocumentoAlProcedimento, _ns1__aggiungiDocumentoAlProcedimentoResponse *ns1__aggiungiDocumentoAlProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getProcedimento(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getProcedimento *ns1__getProcedimento, _ns1__getProcedimentoResponse *ns1__getProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__avanzaProcedimento(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__avanzaProcedimento *ns1__avanzaProcedimento, _ns1__avanzaProcedimentoResponse *ns1__avanzaProcedimentoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getFlussi(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getFlussi *ns1__getFlussi, _ns1__getFlussiResponse *ns1__getFlussiResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getGiustificativi(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getGiustificativi *ns1__getGiustificativi, _ns1__getGiustificativiResponse *ns1__getGiustificativiResponse);

#endif

/* End of soapStub.h */
